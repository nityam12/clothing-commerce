{"ast":null,"code":"import { takeLatest, put, call, all } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess());\n  } catch (error) {\n    yield put(googleSignIn());\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/titangtx/react learn/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","error","googleSignIn","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMX,IAAI,CAACK,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMd,GAAG,CAACO,mBAAmB,EAApB,CAAT;AAED,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACd,UAAMf,GAAG,CAACgB,YAAY,EAAb,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMlB,UAAU,CAACI,eAAe,CAACe,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMjB,GAAG,CAAC,CAACD,IAAI,CAACgB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure } from \"./user.actions\";\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(googleSignInSuccess());\n\n  } catch (error) {\n    yield put(googleSignIn());\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}