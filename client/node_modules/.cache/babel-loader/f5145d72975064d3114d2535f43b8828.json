{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"redu\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(con);\n  } catch (error) {}\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/titangtx/react learn/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","call","con","error","then","collectionsMap","dispatch","fetchCollectionsSuccess","catch","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,MAA3D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAC,MAAMC,IAAI,CAC1BC,GAD0B,CAA9B;AAGD,GAND,CAME,OAAOC,KAAP,EAAc,CAAE;;AAElBP,EAAAA,aAAa,CACVG,GADH,GAEGK,IAFH,CAESN,QAAD,IAAc;AAClB,UAAMO,cAAc,GAAGd,+BAA+B,CAACO,QAAD,CAAtD;AACAQ,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMUL,KAAD,IAAWG,QAAQ,CAACG,uBAAuB,CAACN,KAAK,CAACO,OAAP,CAAxB,CAN5B;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMtB,SAAS,CACbG,eAAe,CAACoB,uBADH,EAEbnB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\n\nimport { firestore, convertCollectionsSnapshotToMap } from \"redu\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap=yield call(\n        con\n        )\n  } catch (error) {}\n\n  collectionRef\n    .get()\n    .then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}