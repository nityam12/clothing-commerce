{"ast":null,"code":"var _jsxFileName = \"/home/titangtx/react learn/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\"); // console.log(collectionRef);\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapShot) => {\n    //     // console.log(snapShot.data());\n    //     const collectionMap = convertCollectionsSnapshotToMap(snapShot);\n    //     updateCollections(collectionMap);\n    //     this.setState({ loading: false });\n    //     // console.log(collectionMap);\n    //   }\n    // );\n    //promise\n    // collectionRef.get().then((snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/titangtx/react learn/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionOverview","CollectionPage","connect","createStructuredSelector","updateCollections","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","firestore","collection","render","match","loading","state","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACN,cAAD,CAA7C;;AAEA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAQrCC,uBARqC,GAQX,IARW;AAAA;;AAUrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB,CAFkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGR,KAAD,iBACN,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEM;AAA1C,SAAuDN,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEK,KAAK,CAACG,IAAK,eADtB;AAEE,MAAA,MAAM,EAAGR,KAAD,iBACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEM;AAAtC,SAAmDN,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AArDoC;;AAwDvC,MAAMS,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CqB,EAAAA,oBAAoB,EAAElB;AADyB,CAAD,CAAhD;;AAIA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe,EAAf,CAA3B;;AAEA,eAAexB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { connect } from \"react-redux\";\n\nimport { createStructuredSelector } from \"reselect\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\n\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // constructor(){\n  //   super();\n  //   this.state={\n\n  //   };\n  // }\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    // console.log(collectionRef);\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapShot) => {\n    //     // console.log(snapShot.data());\n    //     const collectionMap = convertCollectionsSnapshotToMap(snapShot);\n    //     updateCollections(collectionMap);\n\n    //     this.setState({ loading: false });\n    //     // console.log(collectionMap);\n    //   }\n    // );\n\n    //promise\n    // collectionRef.get().then((snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n});\n\nconst mapDispatchToProps = (dispatch) => ({});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}